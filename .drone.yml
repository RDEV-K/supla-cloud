kind: pipeline
name: default

steps:
  #  - name: restore-cache
  #    image: drillster/drone-volume-cache
  #    depends_on: [clone]
  #    volumes:
  #      - name: cache
  #        path: /cache
  #    settings:
  #      restore: true
  #      mount:
  #        - ./vendor
  #        - ./src/Frontend/node_modules

  - name: install-frontend
    image: node:14.16.1-slim
    #    depends_on: [restore-cache]
    depends_on: [ clone ]
    commands:
      - npm install --global npm@7
      - npm -v
      - node -v
      - cd src/frontend
      - (ls node_modules && npm prune) || true
      - npm install

  - name: build-frontend
    image: node:14.16.1-slim
    depends_on: [ install-frontend ]
    commands:
      - cd src/frontend && npm run build

  - name: lint-frontend
    image: node:14.16.1-slim
    depends_on: [ install-frontend ]
    commands:
      - cd src/frontend && npm run lint -s

  - name: install-backend
    image: supla/supla-cloud
    #    depends_on: [restore-cache]
    depends_on: [ clone ]
    commands:
      - cp app/config/parameters.yml.drone app/config/parameters.yml
      - wget https://raw.githubusercontent.com/composer/getcomposer.org/e3e43bde99447de1c13da5d1027545be81736b27/web/installer -O - -q | php -- --quiet --1
      - php composer.phar install

  - name: lint-backend
    image: supla/supla-cloud
    depends_on: [ install-backend ]
    commands:
      - php composer.phar run lint-backend

  - name: backend-unit-tests
    image: supla/supla-cloud
    depends_on: [ install-backend ]
    commands:
      - ./vendor/bin/phpunit -c app --testsuite unit

  - name: api-tests
    image: supla/supla-cloud
    depends_on: [ install-backend ]
    commands:
      - rm -fr var/cache/test
      - ./vendor/bin/phpunit -c app --stop-on-error --stop-on-failure --testsuite api --debug

  - name: integration-tests
    image: supla/supla-cloud
    depends_on: [ api-tests, build-frontend ]
    commands:
      - rm -fr var/cache/test
      - ./vendor/bin/phpunit -c app --stop-on-error --stop-on-failure --testsuite integration --debug

  - name: slack
    image: plugins/slack
    depends_on: [ integration-tests ]
    settings:
      webhook:
        from_secret: slack_webhook
      channel: github
      username: drone
      icon_url: https://unsplash.it/256/256/?random
      template: >
        {{#if build.pull }}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}> in {{since build.created}}
        {{else}}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`) in {{since build.created}}
        {{/if}}
        Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}> at: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{repo.owner}}/{{repo.name}}/{{ build.branch }}> by: {{ build.author }}
        <{{ build.link }}|Visit build page ↗>
    when:
      status: [ success, failure ]
    trigger:
      status: [ success, failure ]


#  - name: rebuild-cache
#    image: drillster/drone-volume-cache
#    depends_on: [install-backend, install-frontend]
#    volumes:
#      - name: cache
#        path: /cache
#    settings:
#      rebuild: true
#      mount:
#        - ./vendor
#        - ./src/Frontend/node_modules

services:
  - name: database
    image: mysql:5.7.20
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: supla_test
      MYSQL_USER: drone
      MYSQL_PASSWORD: ~


#volumes:
#  - name: cache
#    host:
#      path: /tmp/cache

